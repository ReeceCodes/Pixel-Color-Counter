@using Pixel_Color_Counter.Controllers
@model Pixel_Color_Counter.Models.ImageModel

@Html.ValidationSummary()

@using (Html.BeginUmbracoForm("SubmitImage", "Image"))
{
    <div class="row">
        <div class="col-sm-12">
            <input type="file" id="fuIMG" name="fuIMG" accept=".bmp, .png, .jpg, .jpeg, .gif" />
            <br />
            @Html.LabelFor(m => m.Simplify, "Combine similar colors")
            @Html.CheckBoxFor(m => m.Simplify)
            <br />
            <label>Color Similarity Threshold: <input type="number" min="0" max="255" step="1" placeholder="0" value="@Model.Threshold" name="Threshold" /></label>
            <br/>
            <label>Color Similarity Threshold Max: <input type="number" min="50" max="255" step="1" placeholder="50" value="@(Model.SecondThreshold < 50 ? 50 : Model.SecondThreshold)" name="SecondThreshold" /></label>
            <br />
            <button class="btn btn-primary">Submit</button>
        </div>
    </div>
    <hr class="showhr" />


    <div class="row">
        <div class="col-sm-6">
            <p>Colors Unsorted</p>
            @if (Model.currColors != null)
            {   foreach (string k in Model.currColors.Keys)
            {
                <p><span>Color : </span><span style="background-color: rgba(@k,1)">&nbsp;&nbsp;&nbsp;</span><span style="background-color: white;">Occurances: @Model.currColors[k]</span></p>
            }
            }
        </div>
        <div class="col-sm-6">
            <p>Colors Sorted</p>
            @if (Model.dict != null)
            {   foreach (string k in Model.dict.Keys)
            {
                <p><span>Color : </span><span style="background-color: rgba(@k,1)">&nbsp;&nbsp;&nbsp;</span><span style="background-color: white;">Occurances: @Model.dict[k]</span></p>
            }
            }
        </div>
    </div>

}